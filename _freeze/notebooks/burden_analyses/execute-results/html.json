{
  "hash": "908c6d771126ac780ba9dd080b1d5dc4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: EMA Analyses\nauthor: Kendra Wyant\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#|echo: FALSE\n\n# handle conflicts\noptions(conflicts.policy = \"depends.ok\")\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"77e91675366f10788c6bcb59fa1cfc9ee0c75281\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntidymodels_conflictRules()\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tune         1.1.2\n✔ infer        1.0.5     ✔ workflows    1.1.3\n✔ modeldata    1.2.0     ✔ workflowsets 1.0.1\n✔ parsnip      1.1.1     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use suppressPackageStartupMessages() to eliminate package startup messages\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(tidyposterior)\nlibrary(ggtext)\nlibrary(patchwork)\ntheme_set(theme_classic())\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n:::\n\n\n### Compliance\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_shared <- format_path(\"studydata/risk/data_processed/shared\")\n\n\nvisit_dates <- read_csv(file.path(path_shared, \"visit_dates.csv\"), col_types = cols())\nema_m <- vroom::vroom(file.path(path_shared, \"ema_morning.csv\"), col_types = vroom::cols()) %>% \n  mutate(start_date = with_tz(start_date, tzone = \"America/Chicago\"),\n         subid = as.numeric(subid))\nema_l <- vroom::vroom(file.path(path_shared, \"ema_later.csv\"), col_types = vroom::cols()) %>% \n  mutate(start_date = with_tz(start_date, tzone = \"America/Chicago\"),\n         subid = as.numeric(subid))\naudio <- vroom::vroom(file.path(path_shared, \"audio.csv\"), col_types = vroom::cols()) %>% \n  mutate(subid = as.numeric(subid))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nvisit_dates <- visit_dates %>%\n  filter(!is.na(start_study)) %>%\n  # filter out subid who started and ended study on same day - not considered enrolled\n  filter(subid != 235) |> \n  mutate(subid = as.numeric(subid))\n\n# function to map over\nget_study_days <- function(the_subid, dates) {\n  start_study <- dates %>% filter(subid == the_subid) %>% pull(start_study)\n  end_study <- dates %>% filter(subid == the_subid) %>% pull(end_study)\n  study_days <- tibble(subid = the_subid, study_day = seq(start_study, end_study - days(1), by = \"day\")) \n  return(study_days)\n}\n\nfu_1 <- visit_dates %>% \n  filter(!is.na(followup_1))\n\nsubids <- fu_1$subid\ndates <- fu_1 %>% \n  select(subid, start_study, end_study)\n\nstudy_dates <- subids %>% \n  map_dfr(~get_study_days(.x, dates))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema <- ema_m |> \n  select(subid, start_date) |> \n  full_join(ema_l |> select(subid, start_date), by = c(\"subid\", \"start_date\")) |> \n  mutate(start_date = date(start_date)) |> \n  filter(subid %in% subids)\n\n# count EMAs per day\nema_count_4x <- ema |>  \n  count(subid, start_date) |>\n  mutate(n = if_else(n > 4, 4, as.numeric(n)))\n\n# left join with study dates\nema_study_dates <- study_dates |>\n  left_join(ema_count_4x, by = c(\"subid\", \"study_day\" = \"start_date\")) |> \n  mutate(n = if_else(is.na(n), 0, n)) |> \n  mutate(n_prompts = 4)\n\n# slice into 7 day bins\nema_study_weeks <- ema_study_dates |> \n  group_by(subid) |> \n  slice(1:7) |> \n  mutate(week = 1) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(8:14) |> \n    mutate(week = 2)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(15:21) |> \n    mutate(week = 3)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(22:28) |> \n    mutate(week = 4)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(29:35) |> \n    mutate(week = 5)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(36:42) |> \n    mutate(week = 6)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(43:49) |> \n    mutate(week = 7)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(50:56) |> \n    mutate(week = 8)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(57:63) |> \n    mutate(week = 9)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(64:70) |> \n    mutate(week = 10)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(71:77) |> \n    mutate(week = 11)) |> \n  bind_rows(ema_study_dates |> \n    group_by(subid) |> \n    slice(78:84) |> \n    mutate(week = 12)) |> \n  ungroup()\n\nema_week_compliance_4x <- ema_study_weeks |> \n  group_by(subid, week) |> \n  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = \"rowwise\") |> \n  mutate(compliance = sum_n/sum_prompts) |> \n  ungroup()\n\nema_week_compliance_1x <- ema_study_weeks |>\n  mutate(n = if_else(n > 1, 1, n),\n         n_prompts = 1) |> \n  group_by(subid, week) |> \n  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = \"rowwise\") |> \n  mutate(compliance = sum_n/sum_prompts) |> \n  ungroup()\n\nweek_compliance_all <- ema_week_compliance_4x |> \n              mutate(compliance = compliance*100) |> \n              group_by(week) |> \n              summarize(mean_compliance = mean(compliance),\n                        n = n(),\n                        sd = sd(compliance)) |> \n              mutate(se = sd/sqrt(n),\n                     signal = \"4x Daily\") |> \n  bind_rows(ema_week_compliance_1x |> \n              mutate(compliance = compliance*100) |> \n              group_by(week) |> \n              summarize(mean_compliance = mean(compliance),\n                        n = n(),\n                        sd = sd(compliance)) |> \n              mutate(se = sd/sqrt(n),\n                     signal = \"1x Daily\")) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# count audio surveys per day\naudio_count <- audio %>%  \n  count(subid, date) %>%\n  mutate(n = if_else(n > 1, 1, as.numeric(n)))\n\n# left join with study dates\naudio_study_dates <- study_dates %>% \n  left_join(audio_count, by = c(\"subid\", \"study_day\" = \"date\")) %>% \n  mutate(n = if_else(is.na(n), 0, n)) %>% \n  mutate(n_prompts = 1)\n\nmean_audio <- audio_study_dates %>% \n  group_by(subid) %>% \n  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) %>% \n  mutate(mean = n_total/prompt_total) %>% \n  ungroup() %>% \n  summarize(mean = mean(mean))\n\naudio_study_weeks <- audio_study_dates %>% \n  group_by(subid) %>% \n  slice(1:7) %>% \n  mutate(week = 1) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(8:14) %>% \n    mutate(week = 2)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(15:21) %>% \n    mutate(week = 3)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(22:28) %>% \n    mutate(week = 4)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(29:35) %>% \n    mutate(week = 5)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(36:42) %>% \n    mutate(week = 6)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(43:49) %>% \n    mutate(week = 7)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(50:56) %>% \n    mutate(week = 8)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(57:63) %>% \n    mutate(week = 9)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(64:70) %>% \n    mutate(week = 10)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(71:77) %>% \n    mutate(week = 11)) %>% \n  bind_rows(audio_study_dates %>% \n    group_by(subid) %>% \n    slice(78:84) %>% \n    mutate(week = 12)) %>% \n  ungroup()\n\naudio_week_compliance <- audio_study_weeks %>% \n  group_by(subid, week) %>% \n  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = \"rowwise\") %>% \n  mutate(compliance = sum_n/sum_prompts*100) %>% \n  ungroup() |> \n    group_by(week) %>% \n  summarize(mean_compliance = mean(compliance),\n            n = n(),\n            sd = sd(compliance)) %>% \n  mutate(se = sd/sqrt(n),\n           signal = \"Audio Check-in\") \n```\n:::\n\n::: {#cell-fig-burden-compliance .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-burden-compliance\n\naudio_week_compliance %>% \n  bind_rows(week_compliance_all) |> \n  mutate(signal = factor(signal, levels = c(\"1x Daily\", \"4x Daily\", \"Audio Check-in\"),\n                         labels = c(\"1x Daily EMA\", \"4x Daily EMA\", \"Audio Check-in\"))) |> \n  group_by(week, signal) |> \n  ggplot(aes(x = week, y = mean_compliance, group = signal, shape = signal)) +\n  geom_point(size = 2) +\n  geom_line() +\n  geom_errorbar(aes(ymin = mean_compliance - se, ymax = mean_compliance + se), \n                width = .3, linewidth = .3) +\n  theme_classic() +\n  scale_shape_manual(values = c(19, 1, 17)) +\n  scale_x_continuous(name = \"Week\", \n                     breaks = seq(1, 12, 1)) +\n  scale_y_continuous(name = \"Completion percentage\", \n                     breaks = seq(0, 100, 10), \n                     limits = c(0, 100)) +\n  geom_hline(aes(yintercept = mean_compliance), week_compliance_all |> \n               bind_rows(audio_week_compliance) |> \n               group_by(signal) |> \n               summarize(mean_compliance = mean(mean_compliance)),\n             linetype = \"dashed\", linewidth = .3) +\n  theme(legend.title = element_blank(),\n        legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](burden_analyses_files/figure-html/fig-burden-compliance-1.png){#fig-burden-compliance width=672}\n:::\n:::\n\n\n### Acceptability Figures\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\npath_burden <- \"P:/studydata/risk/data_processed/burden\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndata <- read_csv(file.path(path_burden, \"acceptability.csv\"), col_types = cols()) %>% \n  # wristband will be analyzed in supplemental - not enough observations\n  select(-contains(\"wristband\"))\n\n# Adds Y label to histogram plots with 2 rows - code adapted from Stack overflow\nadd_global_label <- function(pwobj, Xlab = NULL, Ylab = NULL, Xgap = 0.03, Ygap = 0.03, ...) {\n  ylabgrob <- patchwork::plot_spacer()\n  if (!is.null(Ylab)) {\n    ylabgrob <- ggplot() +\n      geom_text(aes(x = 1, y = 1), label = Ylab, angle = 90, size = 4) +\n      theme_void() \n  }\n  if (!is.null(Ylab) & is.null(Xlab)) {\n    return((ylabgrob + patchworkGrob(pwobj)) + \n             patchwork::plot_layout(widths = 100 * c(Ygap, 1 - Ygap)))\n  }\n  \n  return(pwobj)\n}\n```\n:::\n\n\nPull out last observation for each participant\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# pull out last available sleep monitor data since this date will be earlier than last \n# survey date for some due to discontinuation of monitor\ndata_sleep <- data %>% \n  filter(!is.na(sleep_interfere)) %>% \n  group_by(subid) %>% \n  arrange(desc(date)) %>% \n  slice(1) %>% \n  ungroup() %>% \n  select(c(subid, starts_with(\"sleep_\")))\n  \n# pull out most recent survey for each subid\ndata_last <- data %>% \n  select(-c(starts_with(\"sleep_\"))) %>% \n  group_by(subid) %>% \n  arrange(desc(date)) %>% \n  slice(1) %>% \n  ungroup() %>% \n  # join with sleep data\n  full_join(data_sleep, by = c(\"subid\")) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 154\nColumns: 28\n$ subid                    <dbl> 1, 2, 3, 5, 6, 7, 9, 10, 11, 15, 16, 18, 19, …\n$ response_id              <chr> \"R_3pb42s0hzoIFsk9\", \"R_1rvLRa6XSAGssBO\", \"R_…\n$ date                     <date> 2017-06-05, 2017-06-16, 2017-06-21, 2017-09-…\n$ daily_survey_interfere   <dbl> 1, 1, 1, 1, 1, 2, 0, 2, 2, 1, 1, 1, 1, 1, 1, …\n$ daily_survey_dislike     <dbl> 1, 1, 2, 1, 1, 2, 1, 2, 0, 1, 1, 1, 0, 2, -1,…\n$ daily_survey_4_1year     <dbl> 1, -2, 2, 1, 1, 2, -1, 2, -1, 1, -1, 1, 0, -1…\n$ daily_survey_1_1year     <dbl> 1, -2, 2, 1, 2, 2, 0, 2, -2, 1, 1, 2, 2, 2, -…\n$ daily_survey_text        <chr> \"The home surveys were easy to complete but I…\n$ audio_checkin_interfere  <dbl> 1, 2, 1, 1, 1, 2, 1, 2, 2, -1, 1, -2, -1, 2, …\n$ audio_checkin_dislike    <dbl> 1, 2, 2, 1, 1, 2, 1, 2, 0, -1, 1, -2, -2, 2, …\n$ audio_checkin_1year      <dbl> 1, 2, 2, 1, 1, 2, 1, 2, -2, -1, 1, -2, -2, 2,…\n$ audio_checkin_text       <chr> \"I enjoyed the daily check more than all the …\n$ carrying_phone_interfere <dbl> 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, …\n$ carrying_phone_dislike   <dbl> 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, …\n$ carrying_phone_1year     <dbl> 1, 2, 2, 2, 2, 2, 1, 2, -2, 2, 2, 2, 2, 2, -1…\n$ carrying_phone_text      <chr> \"The i-phone is a great resource to use. Hope…\n$ location_dislike         <dbl> 1, 1, 2, -1, 1, 2, 1, 2, 1, 1, 1, 0, 2, 2, 1,…\n$ location_1year           <dbl> 1, 2, 2, 1, 2, 2, 0, 2, -2, 1, 1, -1, 2, 2, -…\n$ location_text            <chr> \"Not an issue.\", \"This didn't change where I …\n$ sms_content_dislike      <dbl> 1, 1, 2, -1, 1, 2, 0, 2, 0, 1, -1, -2, 2, 2, …\n$ sms_content_1year        <dbl> 1, 2, 1, 1, 2, 2, 0, 2, -2, 1, -1, 0, 1, 2, -…\n$ phone_text               <chr> \"I did not use the texting options and prefer…\n$ all_logs_dislike         <dbl> 0, 1, 2, 1, 1, 2, 0, 2, 0, 1, 0, 0, 2, 2, 1, …\n$ all_logs_1year           <dbl> 1, 2, 1, 1, 2, 2, 0, 2, -2, 1, 0, 1, 2, 2, -2…\n$ sleep_interfere          <dbl> 1, 2, 2, 1, 1, 2, -2, 2, 0, 2, 2, 2, 2, 2, 1,…\n$ sleep_dislike            <dbl> 1, 2, 2, 1, -1, 2, 2, 2, -1, 2, 1, 2, 2, 2, 0…\n$ sleep_1year              <dbl> 1, -2, 2, 1, 1, 2, -1, 2, -2, -2, 1, 2, 2, 2,…\n$ sleep_text               <chr> \"There were problems with the sleep monitor i…\n```\n\n\n:::\n:::\n\n::: {#cell-fig-interference .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-interference\n#| fig-cap: \"[personal sensing method] interfered with my daily activities\"\n\ninterference_plot_data <- data_last %>% \n  select(contains(\"interfere\"), -carrying_phone_interfere) %>%   \n  pivot_longer(everything(), names_to = \"measure\", values_drop_na = TRUE) %>% \n  mutate(measure = factor(measure, \n                          levels = c(\"audio_checkin_interfere\", \"daily_survey_interfere\", \n                                     \"sleep_interfere\"),\n                          labels = c(\"Audio check-in\", \"EMA\", \"Sleep quality\"))) %>% \n  mutate(value = factor(value, levels = c(-2:2), labels = c(\"Strongly agree\", \"Agree\", \"Undecided\", \"Disagree\", \"Strongly disagree\"))) %>% \n  mutate(active = case_when(measure == \"Audio check-in\" ~ \"Active methods\",\n                            measure == \"EMA\" ~ \"Active methods\",\n                            measure == \"Sleep quality\" ~ \"Active methods\")) \n\ninterference_plot <- interference_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  ggplot(aes(x = value, y = ..prop.., group = measure)) +\n  geom_bar(color = \"black\", fill = \"#FFDEDE\") +\n  facet_grid(active ~ measure) +\n  theme_classic() +\n  labs(y = \"Proportion\",\n       x = NULL) +\n  theme(legend.position = \"none\",\n        text = element_text(size = 12),\n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  ylim(0, .6) +\n  geom_vline(aes(xintercept = \"Undecided\"), linetype = \"dashed\", size = .4, color = \"#787575\") +\n  geom_vline(aes(xintercept = means), interference_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  group_by(measure) %>% \n  summarise(means = mean(as.numeric(value), na.rm = TRUE)), size = .705, color = \"#b44343\") \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| label: fig-interference\n#| fig-cap: \"[personal sensing method] interfered with my daily activities\"\n\ninterference_plot\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: The dot-dot notation (`..prop..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(prop)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![[personal sensing method] interfered with my daily activities](burden_analyses_files/figure-html/fig-interference-1.png){#fig-interference width=672}\n:::\n:::\n\n::: {#cell-fig-dislike .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-dislike\n#| fig-cap: \"I disliked [personal sensing method]\"\n\ndislike_plot_data <- data_last %>% \n  select(contains(\"dislike\")) %>%  \n  pivot_longer(everything(), names_to = \"measure\", values_drop_na = TRUE) %>% \n   mutate(measure = factor(measure, \n                          levels = c(\"audio_checkin_dislike\", \"daily_survey_dislike\", \"sleep_dislike\",\n                                     \"location_dislike\", \"all_logs_dislike\", \"sms_content_dislike\"),\n                          labels = c(\"Audio check-in\", \"EMA\", \"Sleep quality\",\n                                     \"Geolocation\", \"Cellular communication logs\", \"SMS text message content\"))) %>% \n  mutate(value = factor(value, levels = c(-2:2), labels = c(\"Strongly agree\", \"Agree\", \"Undecided\", \"Disagree\", \"Strongly disagree\"))) %>% \n  mutate(active = case_when(measure == \"Audio check-in\" ~ \"Active methods\",\n                            measure == \"EMA\" ~ \"Active methods\",\n                            measure == \"Sleep quality\" ~ \"Active methods\",\n                            measure == \"Geolocation\" ~ \"Passive methods\",\n                            measure == \"Cellular communication logs\" ~ \"Passive methods\",\n                            measure == \"SMS text message content\" ~ \"Passive methods\")) \n\nactive_dis <- dislike_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  ggplot(aes(x = value, y = ..prop.., group = measure)) +\n  geom_bar(color = \"black\", fill = \"#FFDEDE\") +\n  facet_grid(active ~ measure) +\n  theme_classic() +\n  labs(y = NULL,\n       x = NULL) +\n  theme(legend.position = \"none\",\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        text = element_text(size = 12)) +\n  ylim(0, .65) +\n  geom_vline(aes(xintercept = means), dislike_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  group_by(measure) %>% \n  summarise(means = mean(as.numeric(value), na.rm = TRUE)), size = .705, color = \"#b44343\") +\n  geom_vline(aes(xintercept = \"Undecided\"), linetype = \"dashed\", size = .4, color = \"#787575\") +\n  theme(text = element_text(size = 12))\n\n\npassive_dis <- dislike_plot_data %>% \n  filter(measure == \"Geolocation\" | measure == \"Cellular communication logs\" | measure == \"SMS text message content\") %>% \n  ggplot(aes(x = value, y = ..prop.., group = measure)) +\n  geom_bar(color = \"black\", fill = \"#DBF8FF\") +\n  facet_grid(active ~ measure) +\n  theme_classic() +\n  labs(y = NULL,\n       x = NULL) +\n    theme(legend.position = \"none\",\n        text = element_text(size = 12),\n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  ylim(0, .6) +\n  geom_vline(aes(xintercept = means), dislike_plot_data %>% \n  filter(measure == \"Geolocation\" | measure == \"Cellular communication logs\" | measure == \"SMS text message content\") %>%  \n  group_by(measure) %>% \n  summarise(means = mean(as.numeric(value), na.rm = TRUE)), size = .705, color = \"#05667b\") +\n  geom_vline(aes(xintercept = \"Undecided\"), linetype = \"dashed\", size = .4, color = \"#787575\") \n\ndislike_plot <- wrap_plots(active_dis, passive_dis, ncol = 1)\n\ndislike_plot <- dislike_plot  %>% \n  add_global_label(Ylab = \"                   Proportion\",\n                   Ygap = .02\n)\n\ndislike_plot\n```\n\n::: {.cell-output-display}\n![I disliked [personal sensing method]](burden_analyses_files/figure-html/fig-dislike-1.png){#fig-dislike width=672}\n:::\n:::\n\n::: {#cell-fig-willingness .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-willingness\n#| fig-cap: \"I would be willing to use [personal sensing method] for one year to help with my recovery\"\n\nwillingness_plot_data <- data_last %>% \n  select(contains(\"1year\")) %>%  \n  pivot_longer(everything(), names_to = \"measure\", values_drop_na = TRUE) %>% \n  mutate(measure = factor(measure, \n                          levels = c(\"audio_checkin_1year\", \"daily_survey_4_1year\", \n                                     \"daily_survey_1_1year\", \"sleep_1year\", \"location_1year\", \n                                     \"all_logs_1year\", \"sms_content_1year\"),\n                          labels = c(\"Audio check-in\", \"EMA\", \"Daily Survey (x1)<i><sup>a</sup></i>\",\n                                     \"Sleep quality\", \"Geolocation\", \"Cellular communication logs\", \n                                     \"SMS text message content\"))) %>% \n  mutate(value = factor(value, levels = c(-2:2), labels = c(\"Strongly disagree\", \"Disagree\", \"Undecided\", \"Agree\", \"Strongly agree\"))) %>% \n  mutate(active = case_when(measure == \"Audio check-in\" ~ \"Active methods\",\n                            measure == \"EMA\" ~ \"Active methods\",\n                            measure == \"Sleep quality\" ~ \"Active methods\",\n                            measure == \"Geolocation\" ~ \"Passive methods\",\n                            measure == \"Cellular communication logs\" ~ \"Passive methods\",\n                            measure == \"SMS text message content\" ~ \"Passive methods\")) \n\nwillingness_active <- willingness_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  ggplot(aes(x = value, y = ..prop.., group = measure)) +\n  geom_bar(color = \"black\", fill = \"#FFDEDE\") +\n  facet_grid(active ~ measure) +\n  theme_classic() +\n  labs(y = NULL,\n       x = NULL) +\n  theme(legend.position = \"none\",\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        text = element_text(size = 12),\n        strip.text = element_markdown()) +\n  ylim(0, .6) +\n  geom_vline(aes(xintercept = means), willingness_plot_data %>% \n  filter(measure == \"Audio check-in\" | measure == \"EMA\" | measure == \"Sleep quality\") %>% \n  group_by(measure) %>% \n  summarise(means = mean(as.numeric(value), na.rm = TRUE)), size = .705, color = \"#b44343\") +\n  geom_vline(aes(xintercept = \"Undecided\"), linetype = \"dashed\", size = .4, color = \"#787575\")\n\n\nwillingness_passive <- willingness_plot_data %>% \n  filter(measure == \"Geolocation\" | measure == \"Cellular communication logs\" | measure == \"SMS text message content\") %>% \n  ggplot(aes(x = value, y = ..prop.., group = measure)) +\n  geom_bar(color = \"black\", fill = \"#DBF8FF\") +\n  facet_grid(active ~ measure) +\n  theme_classic() +\n  labs(y = NULL,\n       x = NULL) +\n    theme(legend.position = \"none\",\n        text = element_text(size = 12),\n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  ylim(0, .6) +\n  geom_vline(aes(xintercept = means), willingness_plot_data %>% \n  filter(measure == \"Geolocation\" | measure == \"Cellular communication logs\" | measure == \"SMS text message content\") %>%  \n  group_by(measure) %>% \n  summarise(means = mean(as.numeric(value), na.rm = TRUE)), size = .705, color = \"#05667b\") +\n  geom_vline(aes(xintercept = \"Undecided\"), linetype = \"dashed\", size = .4, color = \"#787575\")\n\nwillingness_final_plot <- wrap_plots(willingness_active, willingness_passive, ncol = 1)\n\nwillingness_final_plot <- willingness_final_plot  %>% \n  add_global_label(Ylab = \"                   Proportion\",\n                   Ygap = .02\n)\n\nwillingness_final_plot\n```\n\n::: {.cell-output-display}\n![I would be willing to use [personal sensing method] for one year to help with my recovery](burden_analyses_files/figure-html/fig-willingness-1.png){#fig-willingness width=672}\n:::\n:::\n",
    "supporting": [
      "burden_analyses_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}