---
title: EMA Analyses
author: Kendra Wyant
editor_options: 
  chunk_output_type: console
---

```{r}
#|echo: FALSE

# handle conflicts
options(conflicts.policy = "depends.ok")
devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_ml.R?raw=true")
tidymodels_conflictRules()

library(tidyverse)
library(tidymodels)
library(tidyposterior)
theme_set(theme_classic())

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
```

### Posterior Probabilities
```{r simulated data}
#| echo: false

sim_auroc <- tibble(lag = rep(0, 10),
                    repeat_num = rep(1, 10),
                    fold_num = seq(1:10),
                    auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .88, sd = .04)) |> 
  bind_rows(tibble(lag = rep(0, 10),
                   repeat_num = rep(2, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .88, sd = .04))) |> 
   bind_rows(tibble(lag = rep(0, 10),
                   repeat_num = rep(3, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .88, sd = .04))) |> 
   bind_rows(tibble(lag = rep(24, 10),
                   repeat_num = rep(1, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .87, sd = .04))) |> 
   bind_rows(tibble(lag = rep(24, 10),
                   repeat_num = rep(2, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0,mean = .87, sd = .04))) |> 
   bind_rows(tibble(lag = rep(24, 10),
                   repeat_num = rep(3, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .87, sd = .04))) |> 
  bind_rows(tibble(lag = rep(72, 10),
                   repeat_num = rep(1, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .85, sd = .04))) |> 
   bind_rows(tibble(lag = rep(72, 10),
                   repeat_num = rep(2, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .85, sd = .04))) |> 
   bind_rows(tibble(lag = rep(72, 10),
                   repeat_num = rep(3, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .85, sd = .04))) |> 
  bind_rows(tibble(lag = rep(168, 10),
                   repeat_num = rep(1, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .82, sd = .04))) |> 
   bind_rows(tibble(lag = rep(168, 10),
                   repeat_num = rep(2, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .82, sd = .04))) |> 
   bind_rows(tibble(lag = rep(168, 10),
                   repeat_num = rep(3, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0,  mean = .82, sd = .04))) |> 
   bind_rows(tibble(lag = rep(336, 10),
                   repeat_num = rep(1, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .78, sd = .04))) |> 
   bind_rows(tibble(lag = rep(336, 10),
                   repeat_num = rep(2, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .78, sd = .04))) |> 
   bind_rows(tibble(lag = rep(336, 10),
                   repeat_num = rep(3, 10),
                   fold_num = seq(1:10),
                   auroc = truncnorm::rtruncnorm(n = 10, b = 1.0, mean = .78, sd = .04)))
```

```{r}
#| output: false

set.seed(101)
pp <- sim_auroc |> 
  pivot_wider(names_from = lag, values_from = auroc) |> 
  rename(id = repeat_num,
         id2 = fold_num) |> 
  perf_mod(formula = statistic ~ model + (1 | id2/id),
         transform = tidyposterior::logit_trans,  # for skewed & bounded AUC
         adapt_delta = .99,
         family = gaussian, 
)  
```

```{r}
pp_tidy <- pp |> 
  tidy(seed = 123) 

ci <- pp_tidy |> 
  summary() |> 
  mutate(model = factor(model, levels = c(0, 24, 72, 168, 336),
                        labels = c("0 lag", "24 lag", "72 lag", "168 lag", "336 lag")),
         y = 1000)
```

```{r}
#| label: fig-lag-posteriors

pp_tidy |> 
  mutate(model = factor(model, levels = c(0, 24, 72, 168, 336),
                        labels = c("0 lag", "24 lag", "72 lag", "168 lag", "336 lag"))) |>
  ggplot() + 
  geom_histogram(aes(x = posterior, fill = model), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean,
                           color = model),
               data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper, color = model),
                data = ci) +
  facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  xlab("Area Under ROC Curve") +
  theme(legend.position = "none")
```


### Model Contrasts
```{r}
ci <- pp |>
  contrast_models(list("0", "24", "72", "168"), 
                  list("24", "72", "168", "336")) |> 
  summary(size = .01) |> 
  mutate(contrast = factor(contrast, 
                           levels = c("0 vs 24", "24 vs 72", "72 vs 168", "168 vs 336")),
         y = 700)
```

```{r}
#| label: fig-lag-contrasts

pp |> 
  tidy(seed = 123) |>   
  group_by(model) |> 
  mutate(sample = row_number()) |> 
  ungroup() |> 
  pivot_wider(names_from = model, values_from = posterior) |> 
  mutate(`0 vs 24` = `0` - `24`,
         `24 vs 72` = `24` - `72`,
         `72 vs 168` = `72` - `168`,
         `168 vs 336` = `168` - `336`) |> 
  pivot_longer(cols = `0 vs 24`:`168 vs 336`,
               names_to = "contrast",
               values_to = "posterior") |> 
  mutate(contrast = factor(contrast, 
                           levels = c("0 vs 24", 
                                      "24 vs 72", 
                                      "72 vs 168",
                                      "168 vs 336"))) |> 
  ggplot() +
  geom_histogram(aes(x = posterior), 
                 color = "black", fill = "grey", 
                 alpha = .4, bins = 30) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean), data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper), data = ci) +
  facet_wrap(~contrast, ncol = 1) +
  ylab("Posterior Probability") +
  xlab("Model Contrast for AUC") +
  theme(legend.position = "none")
```